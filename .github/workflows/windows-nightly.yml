name: Windows Nightly
on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v5
      - uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1
      - uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.0.x"

      - name: Install Dependencies
        id: msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG64
          update: true
          install: >-
            mingw-w64-clang-x86_64-ffms2
            mingw-w64-clang-x86_64-libass
            mingw-w64-clang-x86_64-ntldd

      - name: Copy dll.a to .a
        shell: pwsh
        env:
          MSYS2_DIR: ${{ steps.msys2.outputs.msys2-location }}/clang64/lib
        run: |
          Get-ChildItem "$env:DLL_DIR\*.dll.a" | ForEach-Object { $target = $_.FullName -replace '\.dll\.a$','.a'; if (-not (Test-Path $target)) { Copy-Item $_.FullName $target } }

      - name: Build Mizuki
        shell: pwsh
        env:
          MSYS2_DIR: ${{ steps.msys2.outputs.msys2-location }}/clang64/lib
        run: |
          pushd Mizuki
          zig build --release=safe
          popd

      - name: Build Ameko
        shell: pwsh
        run: |
          pushd Ameko
          dotnet publish -c Release -p:SolutionDir=..\ -r win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesInSingleFile=true
          popd

      - name: Copy Dependencies
        shell: msys2 {0}
        run: |
          cp "Mizuki/zig-out/bin/Mizuki.dll" "Ameko/bin/Release/net9.0/win-x64/publish"
          for (dll in $(${{ steps.msys2.outputs.msys2-location }}/clang64/bin/ntldd -R "Mizuki/zig-out/bin/Mizuki.dll" | awk '/clang64/' {print $3})) do
            cp "$dll" "Ameko/bin/Release/net9.0/win-x64/publish"
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ameko-nightly-win-x64
          path: Ameko/bin/Release/net9.0/win-x64/publish
